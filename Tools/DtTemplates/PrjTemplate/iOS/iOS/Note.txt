》项目导入Common.props，包括定义平台常量、引用包版本等


》为避免冗余的文件，相同文件的公共文件采取文件链接方式


》项目目录说明：
iOS\Assets.xcassets 图标资源，可通过控件样例的工具生成，在项目中不可见

iOS\Resources       名称必须是 Resources，否则字体无法加载
    \Assets
        \Lottie  *.json是lottie格式动画的json文件

        -- 图片文件无需指定 BundleResource，生成操作默认“无”即可，会自动 BundleResource 到 Assets目录
        \SplashScreen@x.png 启动图片，配合 LaunchScreen.storyboard 实现启动动画

    \Fonts
        \icon.ttf  自定义矢量字体库，文件链接
        \uno-fluentui-assets.ttf uno用到的字体库，文件链接

iOS\Info.plist  App配置文件

iOS\Entitlements.plist  需要权限列表

iOS\LaunchScreen.storyboard 启动动画定义

Images\*.png 文件链接方式，项目中用到的图片，作为内容生成，ms-appx:///Images/*.png
iOS目录下的资源为iOS专用，Images下的图片为公用

\App.xaml  全局公共，文件链接

\Main.cs 入口


》资源文件的生成操作：BundleResource 和 Content(内容) 的区别
它们的输出目录不同，参见：Dt.Shell.IOS\bin\Debug\net6.0-ios\iossimulator-x64\Dt.Shell.IOS.app
BundleResource的资源文件输出目录省略 iOS\Resources 两级目录，Content的资源文件输出到完整目录
如 iOS\Resources\Lottie\Dash.json 资源文件，
BundleResource 时路径：ms-appx:///Lottie/Dash.json
Content 时路径：       ms-appx:///iOS/Resources/Lottie/Dash.json
为了统一资源文件的路径，约定放在ms-appx:///Assets目录下，这就需要在iOS项目中资源文件放在iOS\Resources\Assets目录下


》mac端生成后的位置：/Users/oysd/Library/Caches/Xamarin/mtbs/builds/Dt.Shell.iOS/


》接收“分享”有两种情况实现，主要取决于发起“分享”的app的实现方式：
1. 使用UIDocumentInterationController发起的分享，接收时只需要在Info.plist中配置CFBundleDocumentTypes，并在App.xaml.cs中重写OpenUrl，如app 文件；
2. 使用UIActivityViewController发起的分享，接收时需要在独立的dll项目中实现Share Extension，iOS8.0 以后增加的方式，如 照片 邮箱；
本系统只处理第一种情况！未实现“照片”中的接收分享功能


》发布：选择Release + iPhone + 远程设备，生成前先确认Info.plist和iOS项目文件csproj中的版本相同，重新生成iOS项目，过程比较漫长，生成成功后使用命令发布，
使用PowerShell切到iOS项目的路径下，运行：
dotnet publish -f:net6.0-ios -c:Release


》开发、调试、发布上架的详细过程参见《搬运工客户端手册.docx》