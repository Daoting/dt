<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>netstandard2.0</TargetFramework>
		<LangVersion>9.0</LangVersion>
		<NoWarn>NU5128</NoWarn>
		<!-- 打包时包含pdb文件，用于调试 -->
		<AllowedOutputExtensionsInPackageBuildOutputFolder Condition="'$(Configuration)'=='Debug'">$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
		<GeneratePackageOnBuild Condition="'$(Configuration)'=='Release'">true</GeneratePackageOnBuild>
		<!-- 将输出目录的内容打包到 analyzers 一份 -->
		<TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
		<!-- release不输出pdb调试信息 -->
		<DebugType Condition="'$(Configuration)'=='Release'">none</DebugType>
	</PropertyGroup>

	<!-- 包属性 -->
	<PropertyGroup>
		<Version>1.0.0</Version>
		<Description>搬运工客户端生成时工具包</Description>
		<Authors>Daoting</Authors>
		<Product>搬运工基础平台</Product>
		<Copyright>Copyright © 2021</Copyright>
		<PackageProjectUrl>https://github.com/daoting/dt</PackageProjectUrl>
		<PackageIcon>logo.png</PackageIcon>
		<PackageIconUrl />
		<PackageTags>搬运工 WinUI UWP Uno Wasm</PackageTags>
		<!-- 打包时dll放在tools目录 -->
		<IsTool>true</IsTool>
	</PropertyGroup>

	<!-- 包图标 -->
	<ItemGroup>
		<None Include="..\..\..\logo.png">
			<Pack>True</Pack>
			<PackagePath>\</PackagePath>
			<Visible>false</Visible>
		</None>
	</ItemGroup>

	<ItemGroup>
		<!-- Rolsyn生成代码 -->
		<PackageReference Include="Microsoft.CodeAnalysis" Version="3.8.0" PrivateAssets="All" />
		<PackageReference Include="Microsoft.Build.Utilities.Core" Version="15.3.409" PrivateAssets="All" />
		<!-- Brotli压缩 -->
		<PackageReference Include="BrotliSharpLib" Version="0.3.3" PrivateAssets="All" />
		<!-- 为项目添加 TypeScript 编译支持，打包时注释掉，否则包内多出js文件 -->
		<!--<PackageReference Include="Microsoft.TypeScript.MSBuild" Version="4.8.4" PrivateAssets="All" />-->
	</ItemGroup>

	<ItemGroup>
		<EmbeddedResource Include="Wasm\Res\service-worker.js" />
		<Content Include="Wasm\build\**">
			<Pack>true</Pack>
			<PackagePath>build</PackagePath>
		</Content>
		<Content Include="$(NuGetPackageRoot)/brotlisharplib/0.3.3/lib/netstandard2.0/*.dll">
			<Pack>true</Pack>
			<PackagePath>tools</PackagePath>
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<Visible>false</Visible>
		</Content>
	</ItemGroup>

	<Target Name="CopyProjectReferencesToPackage" DependsOnTargets="ResolveReferences">
		<ItemGroup>
			<!-- 将本项目输出目录的所有内容打包，不包括子目录 -->
			<TfmSpecificPackageFile Include="$(OutputPath)Dt.BuildTools.*" Exclude="$(OutputPath)Dt.BuildTools.deps.json" PackagePath="analyzers\dotnet\cs" />
		</ItemGroup>
	</Target>

	<!-- TypeScript参数，不使用tsconfig.json -->
	<PropertyGroup>
		<!-- 指定编译的ES版本 -->
		<TypeScriptTarget>ES2020</TypeScriptTarget>
		<!-- 保存后不立即编译 -->
		<TypeScriptCompileOnSaveEnabled>False</TypeScriptCompileOnSaveEnabled>
		<!-- 不允许隐式的any类型 -->
		<TypeScriptNoImplicitAny>True</TypeScriptNoImplicitAny>
		<!-- 如果报告了任何类型检查错误，则禁用输出文件 -->
		<TypeScriptNoEmitOnError>True</TypeScriptNoEmitOnError>
		<!-- 移除注释 -->
		<TypeScriptRemoveComments>True</TypeScriptRemoveComments>
		<!-- 合并输出文件 -->
		<TypeScriptOutFile>Wasm/build/embedded/WasmScripts/dt.js</TypeScriptOutFile>
		<!-- 不输出map文件 -->
		<TypeScriptSourceMap>False</TypeScriptSourceMap>
		<!-- ts文件根目录 -->
		<TypeScriptInclude>Wasm/TypeScript/**/*</TypeScriptInclude>
	</PropertyGroup>
</Project>
