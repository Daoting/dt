<Project>
    <PropertyGroup>
        <!-- 启用全局using -->
        <ImplicitUsings>enable</ImplicitUsings>
        <NoWarn>$(NoWarn);1591;NU1701;Uno0001;0252;NETSDK1206;SYSLIB0050</NoWarn>
        <!-- 始终禁止xbf嵌入到pri文件，默认debug时不嵌入，release时嵌入，嵌入时包升级会造成引用项目都必须重新编译 -->
        <DisableEmbeddedXbf>true</DisableEmbeddedXbf>
        <IsWin>false</IsWin>
        <IsAndroid>false</IsAndroid>
        <IsIOS>false</IsIOS>
        <IsWasm>false</IsWasm>
    </PropertyGroup>

    <!-- 目标框架 -->
    <Choose>
        <When Condition="$(SolutionFileName.Contains('-win'))">
            <PropertyGroup>
                <TargetFrameworks>net8.0-windows10.0.19041</TargetFrameworks>
            </PropertyGroup>
        </When>
        <When Condition="$(SolutionFileName.Contains('-android'))">
            <PropertyGroup>
                <TargetFrameworks>net8.0-android</TargetFrameworks>
            </PropertyGroup>
        </When>
        <When Condition="$(SolutionFileName.Contains('-ios'))">
            <PropertyGroup>
                <TargetFrameworks>net8.0-ios</TargetFrameworks>
            </PropertyGroup>
        </When>
        <When Condition="$(SolutionFileName.Contains('-wasm'))">
            <PropertyGroup>
                <TargetFrameworks>net8.0</TargetFrameworks>
            </PropertyGroup>
        </When>
        <Otherwise>
            <PropertyGroup>
                <TargetFrameworks>net8.0-windows10.0.19041;net8.0-android;net8.0-ios;net8.0</TargetFrameworks>
            </PropertyGroup>
        </Otherwise>
    </Choose>
    
    <Choose>
        <When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">
            <PropertyGroup>
                <IsWin>true</IsWin>
                <!--ENABLECURSOR 启用光标，winui赋值时容易锁死-->
                <DefineConstants>$(DefineConstants);WIN;ENABLECURSOR</DefineConstants>
                <TargetPlatformMinVersion>10.0.18362.0</TargetPlatformMinVersion>
                <RuntimeIdentifiers>win-x86;win-x64;win-arm64</RuntimeIdentifiers>
                <!-- 确保可运行 dotnet build command line -->
                <EnableCoreMrtTooling Condition=" '$(BuildingInsideVisualStudio)' != 'true' ">false</EnableCoreMrtTooling>
            </PropertyGroup>
        </When>
        <When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">
            <PropertyGroup>
                <IsAndroid>true</IsAndroid>
                <!-- UNO_DISABLE_KNOWN_MISSING_TYPES已无用，参见 UITree.cs 中的说明 -->
                <DefineConstants>$(DefineConstants);ANDROID</DefineConstants>
                <SupportedOSPlatformVersion>21.0</SupportedOSPlatformVersion>
            </PropertyGroup>
        </When>
        <When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">
            <PropertyGroup>
                <IsIOS>true</IsIOS>
                <DefineConstants>$(DefineConstants);IOS</DefineConstants>
                <SupportedOSPlatformVersion>10.0</SupportedOSPlatformVersion>
            </PropertyGroup>

            <!--
              Eagerly define capabilities for iOS to avoid VS 2022 to ask for
              project reload, and ninitialize the debugger toolbar faster.
              See https://github.com/unoplatform/uno/issues/14303.
              -->
            <ItemGroup>
                <ProjectCapability Include="XamarinStaticLaunchProfiles" />
                <ProjectCapability Include="Maui" />
                <ProjectCapability Include="MauiCore" />
            </ItemGroup>
        </When>
        <When Condition="!$(TargetFramework.Contains('-'))">
            <PropertyGroup>
                <IsWasm>true</IsWasm>
                <DefineConstants>$(DefineConstants);WASM;ENABLECURSOR</DefineConstants>
            </PropertyGroup>
        </When>
    </Choose>

    <Choose>
        <When Condition="'$(Configuration)'=='Release'">
            <PropertyGroup>
                <!-- release不输出pbd调试信息 -->
                <DebugType>none</DebugType>
            </PropertyGroup>
        </When>
        <Otherwise>
            <PropertyGroup>
                <DebugType>portable</DebugType>
                <DebugSymbols>True</DebugSymbols>
                <!-- 热重载 (See https://github.com/dotnet/sdk/issues/36666) -->
                <IncludeSourceRevisionInInformationalVersion>false</IncludeSourceRevisionInInformationalVersion>
            </PropertyGroup>
        </Otherwise>
    </Choose>

    <ItemGroup>
        <Using Include="Dt.Core" />
        <Using Include="Serilog" />
        <Using Include="System.Linq" />
        <Using Include="System.Threading.Tasks" />
    </ItemGroup>
    
    <!--win预览xaml用，生成前嵌入，否则xaml页面后台代码的智能失效-->
    <Target Name="EmbeddedXaml" BeforeTargets="PrepareForBuild" Condition="$(IsWin)">
        <ItemGroup>
            <EmbeddedResource Include="**\*.xaml" Exclude="bin\**\*.xaml;obj\**\*.xaml" />
        </ItemGroup>
    </Target>

    <!-- WindowsAppSDK已内置，uno需要，否则xaml文件无法编译 -->
    <ItemGroup Condition="!$(IsWin)">
        <Page Include="**\*.xaml" Exclude="bin\**\*.xaml;obj\**\*.xaml" />
        <Compile Update="**\*.xaml.cs">
            <DependentUpon>%(Filename)</DependentUpon>
        </Compile>
        <UpToDateCheckInput Include="**\*.xaml" Exclude="bin\**\*.xaml;obj\**\*.xaml" />
    </ItemGroup>
    
    <!-- 包引用，独立文件方便升级 -->
    <Import Project="References.props" Condition="exists('References.props')" />
</Project>
