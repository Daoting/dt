<Project>
    <PropertyGroup>
        <Version>4.6.0</Version>
        <!-- 启用全局using -->
        <ImplicitUsings>enable</ImplicitUsings>
        <NoWarn>$(NoWarn);1591;NU1701;Uno0001;0252;NETSDK1206;SYSLIB0050</NoWarn>
        <!-- 始终禁止xbf嵌入到pri文件，默认debug时不嵌入，release时嵌入，嵌入时包升级会造成引用项目都必须重新编译 -->
        <DisableEmbeddedXbf>true</DisableEmbeddedXbf>
        <DefaultLanguage>zh-CN</DefaultLanguage>
        <!-- pbd调试信息 -->
        <DebugType>portable</DebugType>
        <DebugSymbols>True</DebugSymbols>
        <!-- 热重载 https://github.com/dotnet/sdk/issues/36666 -->
        <IncludeSourceRevisionInInformationalVersion Condition="'$(Configuration)'=='Debug'">false</IncludeSourceRevisionInInformationalVersion>
        <!-- 生成xml文档 -->
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <IsWin>false</IsWin>
        <IsAndroid>false</IsAndroid>
        <IsIOS>false</IsIOS>
        <IsWasm>false</IsWasm>
        <IsSkia>false</IsSkia>
        <!-- 目标框架，任意组合，如 SlnName-win-android-skia.sln -->
        <TargetFrameworks Condition="$(SolutionFileName.Contains('-win'))">$(TargetFrameworks);net8.0-windows10.0.19041</TargetFrameworks>
        <TargetFrameworks Condition="$(SolutionFileName.Contains('-android'))">$(TargetFrameworks);net8.0-android</TargetFrameworks>
        <TargetFrameworks Condition="$(SolutionFileName.Contains('-ios'))">$(TargetFrameworks);net8.0-ios</TargetFrameworks>
        <TargetFrameworks Condition="$(SolutionFileName.Contains('-wasm'))">$(TargetFrameworks);net8.0-browser</TargetFrameworks>
        <TargetFrameworks Condition="$(SolutionFileName.Contains('-skia'))">$(TargetFrameworks);net8.0</TargetFrameworks>
        <TargetFrameworks Condition="$(TargetFrameworks) == ''">net8.0-windows10.0.19041;net8.0-android;net8.0-ios;net8.0-browser;net8.0</TargetFrameworks>
    </PropertyGroup>

    <!-- 平台常量 -->
    <Choose>
        <!-- GetTargetPlatformIdentifier无法区分wpf -->
        <When Condition="$(TargetFramework.Contains('windows10'))">
            <PropertyGroup>
                <IsWin>true</IsWin>
                <!--ENABLECURSOR 启用光标，winui赋值时容易锁死-->
                <DefineConstants>$(DefineConstants);WIN;ENABLECURSOR</DefineConstants>
                <TargetPlatformMinVersion>10.0.18362.0</TargetPlatformMinVersion>
                <RuntimeIdentifiers>win-x86;win-x64;win-arm64</RuntimeIdentifiers>
                <!-- 确保可运行 dotnet build command line -->
                <EnableCoreMrtTooling Condition=" '$(BuildingInsideVisualStudio)' != 'true' ">false</EnableCoreMrtTooling>
            </PropertyGroup>
        </When>
        <When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">
            <PropertyGroup>
                <IsAndroid>true</IsAndroid>
                <!-- UNO_DISABLE_KNOWN_MISSING_TYPES已无用，参见 UITree.cs 中的说明 -->
                <DefineConstants>$(DefineConstants);ANDROID</DefineConstants>
                <SupportedOSPlatformVersion>21.0</SupportedOSPlatformVersion>
            </PropertyGroup>
        </When>
        <When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">
            <PropertyGroup>
                <IsIOS>true</IsIOS>
                <DefineConstants>$(DefineConstants);IOS</DefineConstants>
                <SupportedOSPlatformVersion>10.0</SupportedOSPlatformVersion>
            </PropertyGroup>

            <!--
              Eagerly define capabilities for iOS to avoid VS 2022 to ask for
              project reload, and ninitialize the debugger toolbar faster.
              See https://github.com/unoplatform/uno/issues/14303.
              -->
            <ItemGroup>
                <ProjectCapability Include="XamarinStaticLaunchProfiles" />
                <ProjectCapability Include="Maui" />
                <ProjectCapability Include="MauiCore" />
            </ItemGroup>
        </When>
        <When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'browser'">
            <PropertyGroup>
                <IsWasm>true</IsWasm>
                <DefineConstants>$(DefineConstants);WASM;ENABLECURSOR</DefineConstants>
            </PropertyGroup>
        </When>
        <Otherwise>
            <PropertyGroup>
                <!-- gtk wpf -->
                <IsSkia>true</IsSkia>
                <DefineConstants>$(DefineConstants);SKIA;ENABLECURSOR</DefineConstants>
            </PropertyGroup>
        </Otherwise>
    </Choose>

    <PropertyGroup Condition="'$(Configuration)' == 'Release'">
        <!-- 和Deterministic配合，调试程序时使用github源文件，不使用本地源文件 -->
        <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
        <Deterministic>true</Deterministic>
        <!-- .nuspec文件增加源代码地址 -->
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <!-- .net8.0后其它设置不再需要，也不需Microsoft.SourceLink.GitHub包 -->
    </PropertyGroup>

    <ItemGroup>
        <Using Include="Dt.Core" />
        <Using Include="Serilog" />
        <Using Include="System.Linq" />
        <Using Include="System.Threading.Tasks" />
    </ItemGroup>
    
    <!--win预览xaml用，生成前嵌入，否则xaml页面后台代码的智能失效，最晚ResolveReferences-->
    <Target Name="EmbeddedXaml" BeforeTargets="ResolveReferences" Condition="$(IsWin)">
        <ItemGroup>
            <EmbeddedResource Include="**\*.xaml" Exclude="bin\**\*.xaml;obj\**\*.xaml" />
        </ItemGroup>
    </Target>

    <!-- WindowsAppSDK已内置，uno需要，否则xaml文件无法编译 -->
    <ItemGroup Condition="!$(IsWin)">
        <Page Include="**\*.xaml" Exclude="bin\**\*.xaml;obj\**\*.xaml" />
        <Compile Update="**\*.xaml.cs">
            <DependentUpon>%(Filename)</DependentUpon>
        </Compile>
        <UpToDateCheckInput Include="**\*.xaml" Exclude="bin\**\*.xaml;obj\**\*.xaml" />
    </ItemGroup>

    <PropertyGroup Condition="'$(Configuration)' == 'Release'">
        <!-- 和Deterministic配合，调试程序时使用github源文件，不使用本地源文件 -->
        <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
        <Deterministic>true</Deterministic>
        <!-- .nuspec文件增加源代码地址 -->
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <!-- .net8.0后其它设置不再需要，也不需Microsoft.SourceLink.GitHub包 -->
    </PropertyGroup>

    <ItemGroup>
        <!-- 引用SourceLink提供者包 -->
        <PackageReference Include="Microsoft.SourceLink.GitHub" Version="8.0.0" PrivateAssets="All"/>
    </ItemGroup>

    <!-- 包引用，独立文件方便升级 -->
    <Import Project="References.props" Condition="exists('References.props')" />

    <!--
    Microsoft.Common.CurrentVersion.targets 中定义了系统Targets及顺序：
    BeforeBuild;
    
    BuildOnlySettings;
    PrepareForBuild;
    PreBuildEvent;
    ResolveReferences;
    PrepareResources;
    ResolveKeySource;
    Compile;
    ExportWindowsMDFile;
    UnmanagedUnregistration;
    GenerateSerializationAssemblies;
    CreateSatelliteAssemblies;
    GenerateManifests;
    GetTargetPath;
    PrepareForRun;
    UnmanagedRegistration;
    IncrementalClean;
    PostBuildEvent;
      
    AfterBuild;
    
    BeforeRebuild;
    Clean;
    Build;
    AfterRebuild;
    -->
</Project>
