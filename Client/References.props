<Project>
    <!-- 公共引用包 -->
    <ItemGroup>
        <PackageReference Include="Dt.Infras" Version="3.1.0" />
        <!--高于7.0.9时wasm出错-->
        <PackageReference Include="Microsoft.Data.Sqlite" Version="8.0.0" />
        <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="8.0.0" />
        <PackageReference Include="Serilog" Version="3.1.1" />
        <PackageReference Include="Serilog.Sinks.File" Version="5.0.0" />
        <PackageReference Include="Serilog.Formatting.Compact" Version="2.0.0" />
        <PackageReference Include="System.Linq.Dynamic.Core" Version="1.3.7" />
    </ItemGroup>

    <Choose>
        <When Condition="$(IsWin)">
            <!-- windows引用包 -->
            <ItemGroup>
                <PackageReference Include="Microsoft.WindowsAppSDK" Version="1.4.231115000" PrivateAssets="none" />
                <!-- Lottie动画已正常 -->
                <PackageReference Include="CommunityToolkit.WinUI.Lottie" Version="8.0.0-rc" />
                <!-- Toast参数启动引用 -->
                <PackageReference Include="Microsoft.Toolkit.Uwp.Notifications" Version="7.1.3" />
            </ItemGroup>
        </When>
        <Otherwise>
            <!-- 非windows引用包 -->
            <ItemGroup>
                <PackageReference Include="Uno.WinUI" Version="5.0.64" PrivateAssets="none" />
                <!-- 对应CommunityToolkit.WinUI.Lottie库，渲染Adobe AfterEffects json动画，内部引用SkiaSharp包实现LottieVisualSource -->
                <PackageReference Include="Uno.WinUI.Lottie" Version="5.0.64" />
                <!-- uno日志 -->
                <PackageReference Include="Uno.UI.Adapter.Microsoft.Extensions.Logging" Version="5.0.64" />
                <PackageReference Include="Microsoft.Extensions.Logging" Version="8.0.0" />
                <PackageReference Include="Microsoft.Extensions.Logging.Console" Version="8.0.0" />
            </ItemGroup>
        </Otherwise>
    </Choose>

    <Choose>
        <When Condition="$(IsAndroid)">
            <!-- android引用包 -->
            <ItemGroup>
                <PackageReference Include="Square.OkHttp3" Version="4.12.0" />
                <!-- WorkManager后台任务引用 -->
                <PackageReference Include="Xamarin.AndroidX.Work.Runtime" Version="2.8.1.6" />
            </ItemGroup>
        </When>
        <When Condition="$(IsIOS)">
            <!-- iOS引用包 -->
            <ItemGroup>
                <PackageReference Include="Uno.Extensions.Logging.OSLog" Version="1.7.0" />
            </ItemGroup>
        </When>
        <When Condition="$(IsWasm)">
            <!-- wasm引用包 -->
            <ItemGroup>
                <!-- 打包后提供给外部 web 项目引用时，需要 build 里的 .target -->
                <PackageReference Include="Uno.WinUI.WebAssembly" Version="5.0.64" PrivateAssets="none" />
                <PackageReference Include="Uno.WinUI.MediaPlayer.WebAssembly" Version="5.0.64" />
                <PackageReference Include="Uno.Extensions.Logging.WebAssembly.Console" Version="1.7.0" />
                <PackageReference Include="SQLitePCLRaw.provider.sqlite3" Version="2.1.7" />
            </ItemGroup>
        </When>
    </Choose>

    <ItemGroup Condition="!$(IsWasm)">
        <!-- wasm不支持Essentials, android编译产生缺androidx.window.extensions.jar androidx.window.sidecar.jar警告 -->
        <!-- UseMauiEssentials已无用 -->
        <PackageReference Include="Microsoft.Maui.Essentials" Version="8.0.3" />
    </ItemGroup>

    <!-- 引用包控制
    IncludeAssets：将使用这些资产，默认 all
    ExcludeAssets：不会使用这些资产，默认 none
    PrivateAssets：将使用这些资产，但它们不会流入上级项目，默认 contentfiles;analyzers;build
    
    PrivateAssets="none" 用在 PackageReference 时，上级项目的包被更高级项目引用时，所有资产都会流入更高级项目
    PrivateAssets="all" 用在 ProjectReference 时，避免打包上级项目时引用该项目的nuget包
                   
    所有选项：contentfiles analyzers build compile runtime buildTransitive native none all
    -->
</Project>
