<Project ToolsVersion="Current">
    <!-- 所有项目都需Import -->
    <PropertyGroup>
        <NoWarn>$(NoWarn);1591;NU1701;Uno0001;0252</NoWarn>
        <!-- 启用全局using -->
        <ImplicitUsings>enable</ImplicitUsings>
        <!-- wasm不支持Essentials, android编译产生缺androidx.window.extensions.jar androidx.window.sidecar.jar警告 -->
        <UseMauiEssentials Condition="$(TargetFramework.Contains('-'))">true</UseMauiEssentials>
        <!-- release不输出pbd调试信息 -->
        <DebugType Condition="'$(Configuration)'=='Release'">none</DebugType>
        <!--xbf嵌入到pri文件-->
        <!--<DisableEmbeddedXbf>false</DisableEmbeddedXbf>-->
    </PropertyGroup>

    <!-- 定义平台常量 -->
    <PropertyGroup Condition="$(TargetFramework.Contains('-windows'))">
        <!--ENABLECURSOR 启用光标，winui赋值时容易锁死-->
        <DefineConstants>$(DefineConstants);WIN;ENABLECURSOR</DefineConstants>
        <TargetPlatformMinVersion>10.0.17763.0</TargetPlatformMinVersion>
    </PropertyGroup>

    <PropertyGroup Condition="$(TargetFramework.Contains('-ios'))">
        <DefineConstants>$(DefineConstants);IOS;UNO_DISABLE_KNOWN_MISSING_TYPES</DefineConstants>
        <SupportedOSPlatformVersion>10.0</SupportedOSPlatformVersion>
    </PropertyGroup>

    <PropertyGroup Condition="$(TargetFramework.Contains('-android'))">
        <DefineConstants>$(DefineConstants);ANDROID;UNO_DISABLE_KNOWN_MISSING_TYPES</DefineConstants>
        <SupportedOSPlatformVersion>21.0</SupportedOSPlatformVersion>
    </PropertyGroup>

    <PropertyGroup Condition="!$(TargetFramework.Contains('-'))">
        <DefineConstants>$(DefineConstants);WASM;UNO_DISABLE_KNOWN_MISSING_TYPES;ENABLECURSOR</DefineConstants>
    </PropertyGroup>

    <!-- 公共引用包 -->
    <ItemGroup>
        <PackageReference Include="Dt.Infras" Version="3.0.1" />
        <PackageReference Include="Dt.BuildTools" Version="1.3.4" PrivateAssets="none" />
        <!--高于7.0.9时wasm出错-->
        <PackageReference Include="Microsoft.Data.Sqlite" Version="7.0.9" />
        <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="7.0.0" />
        <PackageReference Include="Serilog" Version="3.0.1" />
        <PackageReference Include="Serilog.Sinks.File" Version="5.0.0" />
        <PackageReference Include="Serilog.Formatting.Compact" Version="1.1.0" />
        <PackageReference Include="System.Linq.Dynamic.Core" Version="1.3.4" />
    </ItemGroup>

    <!-- 非windows引用包 -->
    <ItemGroup Condition="!$(TargetFramework.Contains('-windows'))">
        <PackageReference Include="Uno.WinUI" Version="4.10.13" PrivateAssets="none" />
        <!-- 对应CommunityToolkit.WinUI.Lottie库，渲染Adobe AfterEffects json动画，内部引用SkiaSharp包实现LottieVisualSource -->
        <PackageReference Include="Uno.WinUI.Lottie" Version="4.10.13" />
        <!-- uno日志 -->
        <PackageReference Include="Uno.UI.Adapter.Microsoft.Extensions.Logging" Version="4.10.13" />
        <PackageReference Include="Microsoft.Extensions.Logging" Version="7.0.0" />
        <PackageReference Include="Microsoft.Extensions.Logging.Console" Version="7.0.0" />
    </ItemGroup>

    <!-- windows引用包 -->
    <ItemGroup Condition="$(TargetFramework.Contains('-windows'))">
        <PackageReference Include="Microsoft.WindowsAppSDK" Version="1.4.230913002" PrivateAssets="none" />
        <!-- Toast参数启动引用 -->
        <PackageReference Include="Microsoft.Toolkit.Uwp.Notifications" Version="7.1.3" />
    </ItemGroup>

    <!-- android引用包 -->
    <ItemGroup Condition="$(TargetFramework.Contains('-android'))">
        <PackageReference Include="Square.OkHttp3" Version="4.9.3.2" />
        <!-- WorkManager后台任务引用 -->
        <PackageReference Include="Xamarin.AndroidX.Work.Runtime" Version="2.7.1.4" />
    </ItemGroup>

    <!-- iOS引用包 -->
    <ItemGroup Condition="$(TargetFramework.Contains('-ios'))">
        <PackageReference Include="Uno.Extensions.Logging.OSLog" Version="1.4.0" />
    </ItemGroup>

    <!-- wasm引用包 -->
    <ItemGroup Condition="!$(TargetFramework.Contains('-'))">
        <!-- 打包后提供给外部 web 项目引用时，需要 build 里的 .target -->
        <PackageReference Include="Uno.WinUI.WebAssembly" Version="4.10.13" PrivateAssets="none" />
        <PackageReference Include="Uno.WinUI.MediaPlayer.WebAssembly" Version="4.10.13" />
        <PackageReference Include="Uno.Extensions.Logging.WebAssembly.Console" Version="1.4.0" />
        <PackageReference Include="SQLitePCLRaw.provider.sqlite3" Version="2.1.5" />
    </ItemGroup>

    <!-- 引用包控制
    IncludeAssets：将使用这些资产，默认 all
    ExcludeAssets：不会使用这些资产，默认 none
    PrivateAssets：将使用这些资产，但它们不会流入上级项目，默认 contentfiles;analyzers;build
    
    PrivateAssets="none" 用在 PackageReference 时，上级项目的包被更高级项目引用时，所有资产都会流入更高级项目
    PrivateAssets="all" 用在 ProjectReference 时，避免打包上级项目时引用该项目的nuget包
                   
    所有选项：contentfiles analyzers build compile runtime buildTransitive native none all
    -->

    <ItemGroup>
        <Using Include="Dt.Core" />
        <Using Include="Serilog" />
        <Using Include="System.Linq" />
        <Using Include="System.Threading.Tasks" />
    </ItemGroup>

    <!-- 确保各平台的GlobalUsing相同，不然造成歧义 -->
    <ItemGroup Condition="$(TargetFramework.Contains('-android'))">
        <Using Remove="Android.App" />
        <Using Remove="Android.Widget" />
        <Using Remove="Android.OS.Bundle" />
    </ItemGroup>

    <ItemGroup Condition="$(TargetFramework.Contains('-ios'))">
        <Using Remove="CoreGraphics" />
        <Using Remove="Foundation" />
        <Using Remove="UIKit" />
    </ItemGroup>

    <ItemGroup Condition="!$(TargetFramework.Contains('-'))">
        <Using Remove="Microsoft.AspNetCore.Builder" />
        <Using Remove="Microsoft.AspNetCore.Hosting" />
        <Using Remove="Microsoft.AspNetCore.Http" />
        <Using Remove="Microsoft.AspNetCore.Routing" />
        <Using Remove="Microsoft.Extensions.Configuration" />
        <Using Remove="Microsoft.Extensions.DependencyInjection" />
        <Using Remove="Microsoft.Extensions.Hosting" />
        <Using Remove="Microsoft.Extensions.Logging" />
    </ItemGroup>

    <!--win预览xaml用-->
    <ItemGroup Condition="$(TargetFramework.Contains('-windows'))">
        <EmbeddedResource Include="**\*.xaml" Exclude="bin\**\*.xaml;obj\**\*.xaml" />
    </ItemGroup>
    
    <!-- WindowsAppSDK已内置，uno需要，否则xaml文件无法编译 -->
    <ItemGroup Condition="!$(TargetFramework.Contains('-windows'))">
        <Page Include="**\*.xaml" Exclude="bin\**\*.xaml;obj\**\*.xaml" />
        <Compile Update="**\*.xaml.cs">
            <DependentUpon>%(Filename)</DependentUpon>
        </Compile>
        <UpToDateCheckInput Include="**\*.xaml" Exclude="bin\**\*.xaml;obj\**\*.xaml" />
    </ItemGroup>
</Project>