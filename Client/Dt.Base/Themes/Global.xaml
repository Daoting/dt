<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:ios="http://uno.ui/ios"
    xmlns:android="http://uno.ui/android"
    xmlns:wasm="http://uno.ui/wasm"
    xmlns:a="using:Dt.Base"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="ios android wasm">

    <!-- 全局公共部分，包括常量、公共画刷、转换器 -->

    <!--
    *****************************************************************
    常量
    *****************************************************************
    -->
    <!-- 字体大小 -->
    <x:Double x:Key="大字号">32</x:Double>
    <x:Double x:Key="中字号">15</x:Double>
    <x:Double x:Key="小字号">12</x:Double>

    <!--自定义图标字体库-->
    <win:FontFamily x:Key="IconFont">ms-appx:///Assets/Fonts/icon.ttf#DtIcon</win:FontFamily>
    <ios:FontFamily x:Key="IconFont">ms-appx:///Assets/Fonts/icon.ttf#DtIcon</ios:FontFamily>
    <android:FontFamily x:Key="IconFont">ms-appx:///Assets/Fonts/icon.ttf#DtIcon</android:FontFamily>
    <!--前缀wasm not_wasm netstdref都无效，wasm在App.cs使用代码添加字体库-->
    <!--<wasm:FontFamily x:Key="IconFont">DtIcon</wasm:FontFamily>-->

    <!-- 行外高，含边框1 -->
    <x:Double x:Key="RowOuterHeight">41</x:Double>
    <!-- 行内容高度 -->
    <x:Double x:Key="RowInnerHeight">40</x:Double>
    
    <!--
    *****************************************************************
    公共画刷
    *****************************************************************
    -->
    <SolidColorBrush x:Key="主题蓝色" Color="#FF1BA1E2" />
    <SolidColorBrush x:Key="默认背景" Color="White" />
    <SolidColorBrush x:Key="默认前景" Color="Black" />

    <SolidColorBrush x:Key="暗遮罩" Color="#19000000"/>
    <SolidColorBrush x:Key="深暗遮罩" Color="#33000000"/>
    <SolidColorBrush x:Key="亮遮罩" Color="#19FFFFFF"/>
    <SolidColorBrush x:Key="深亮遮罩" Color="#33FFFFFF"/>
    <SolidColorBrush x:Key="黄遮罩" Color="#19FFFF00"/>
    <SolidColorBrush x:Key="深黄遮罩" Color="#33FFFF00"/>

    <SolidColorBrush x:Key="灰色背景" Color="#FFD6D6D6"/>
    <SolidColorBrush x:Key="灰色边框" Color="#FFC3C3C3"/>

    <SolidColorBrush x:Key="浅灰背景" Color="#FFF1F1F1"/>
    <SolidColorBrush x:Key="浅灰边框" Color="#FFE0E0E0"/>

    <SolidColorBrush x:Key="深灰背景" Color="#FF9D9D9D"/>
    <SolidColorBrush x:Key="深灰边框" Color="#FF969696"/>

    <SolidColorBrush x:Key="黄色背景" Color="#FFFFDA37"/>
    <SolidColorBrush x:Key="浅黄背景" Color="#FFFFFDC5"/>
    <SolidColorBrush x:Key="绿色背景" Color="#FF43B756"/>
    <SolidColorBrush x:Key="浅绿背景" Color="#FFDAFBD7"/>
    <SolidColorBrush x:Key="浅湖蓝背景" Color="#FF2DB6C9"/>
    <SolidColorBrush x:Key="淡蓝背景" Color="#FFD5E9FD"/>
    <SolidColorBrush x:Key="深蓝背景" Color="#FF005297"/>

    <SolidColorBrush x:Key="醒目蓝色" Color="#FF0056FF"/>
    <SolidColorBrush x:Key="醒目红色" Color="#FFFF4500"/>

    <!--
    *****************************************************************
    转换器
    *****************************************************************
    -->
    <!-- bool到Visibility的转换 -->
    <a:BoolToVisibilityConverter x:Key="CvBoolToVisible" />
    <!-- bool取反再到Visibility的转换 -->
    <a:BoolToVisibilityReverseConverter x:Key="CvBoolToCollapsed" />
    <!-- 有文本内容时显示，无文本内容时隐藏(不占空间) -->
    <a:TextVisibleConverter x:Key="CvTextToVisible" Visible="True" />
    <!-- 有文本内容时隐藏，无文本内容时显示 -->
    <a:TextVisibleConverter x:Key="CvTextToCollapsed" Visible="False" />
    <!-- 目标无内容时返回Collapsed -->
    <a:NullToVisibilityConverter x:Key="CvNullToCollapsed" Visible="False" />
    <!-- 目标无内容时返回Visible -->
    <a:NullToVisibilityConverter x:Key="CvNullToVisible" Visible="True" />
    <!-- object到Visibility的转换，1或true返回Visible -->
    <a:ObjectToVisibilityConverter x:Key="CvObjectToVisible" />
    <!-- object取反到Visibility的转换，0或false返回Visible -->
    <a:RObjectToVisibilityConverter x:Key="CvObjectToCollapsed" />
    <!-- 自适应时间转换器，如 昨天，09:13, 2015-04-09-->
    <a:AutoDateTimeConverter x:Key="CvAutoDate" />
    <!-- 日期转换器，如 2015-04-09-->
    <a:DateConverter x:Key="CvDate" />
    <!-- 日期转换器，如 2015-04-09 07:30-->
    <a:DateConverter x:Key="CvDateTime" Format="yyyy-MM-dd HH:mm" />
    <!-- 日期转换器，如 2015-04-09 07:30:12-->
    <a:DateConverter x:Key="CvDateFull" Format="yyyy-MM-dd HH:mm:ss" />
    <!-- 日期转换器，如 07:30-->
    <a:DateConverter x:Key="CvTime" Format="HH:mm" />
    <!-- 日期转换器，如 07:30:12-->
    <a:DateConverter x:Key="CvTimeFull" Format="HH:mm:ss" />
    <!-- bool取反的转换 -->
    <a:BoolToggleConverter x:Key="CvBoolReverse" />
    <!-- 将值转换成两种类型画刷 可自定义TrueBrush FalseBrush -->
    <a:FlagColorConverter x:Key="CvFlagBrush" />
    <!-- Visibility取反 -->
    <a:VisibilityToggleConverter x:Key="CvVisibleReverse" />
    <!-- 逗号隔开的整数 -->
    <a:NumericConverter x:Key="CvInt" />
    <!-- 逗号隔开的两位小数 -->
    <a:NumericConverter x:Key="CvDouble" Scale="2" />
    <!-- 百分数 -->
    <a:NumericConverter x:Key="CvPercentage" IsPercentage="True" />
    <!-- null时为*，非null为Auto -->
    <a:NullToStarConverter x:Key="CvNullToStar" />
    <!-- null时为0，非null为* -->
    <a:NullToZeroConverter x:Key="CvNullToZero" />
    <!-- Icons枚举值转unicode字符 -->
    <a:IconToUnicodeConverter x:Key="CvIconToChar" />
    <!-- Icons枚举值名称转unicode字符 -->
    <a:IconNameToUnicodeConverter x:Key="CvIconNameToChar" />
    <!-- Icons枚举值名称转unicode字符 -->
    <a:IconToNameConverter x:Key="CvIconToName" />
    <!-- 文件长度自动转换为K,M,G -->
    <a:FileLengthConverter x:Key="CvFileLength" />


    <!--
    *****************************************************************
    系统控件样式
    *****************************************************************
    -->

    <!--**************************** TextBlock【不要设置全局样式！】****************************-->
    <!--正文-->
    <Style x:Key="正文" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource 中字号}"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <!--标题-->
    <Style x:Key="标题" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource 大字号}"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
    </Style>

    <!--小字-->
    <Style x:Key="小字" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource 小字号}"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <!--字符文本-->
    <Style x:Key="字符" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource IconFont}"/>
        <Setter Property="FontSize" Value="{StaticResource 中字号}"/>
        <Setter Property="Foreground" Value="{StaticResource 深灰背景}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0,0,4,0"/>
    </Style>

    <!--Lv中默认文本-->
    <Style x:Key="LvTextBlock" TargetType="TextBlock">
        <!--不要设置字体大小-->
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <!--**************************** Button ****************************-->
    <Style x:Key="默认按钮" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource 默认背景}" />
        <Setter Property="Foreground" Value="{StaticResource 主题蓝色}"/>
        <Setter Property="FontSize" Value="{StaticResource 中字号}"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                        <Border x:Name="Rect" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" IsHitTestVisible="False" />
                        <ContentPresenter x:Name="ContentPresenter"
                                          Content="{TemplateBinding Content}"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Rect.Background" Value="{StaticResource 暗遮罩}" />
                                        <Setter Target="Rect.BorderBrush" Value="{StaticResource 深暗遮罩}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="Rect.Background" Value="{StaticResource 深暗遮罩}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Opacity" Value="0.5" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" BasedOn="{StaticResource 默认按钮}"/>

    <!--字符按钮-->
    <Style x:Key="字符按钮" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource 默认前景}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="BorderThickness" Value="1" />
        <!--宽高 40 X 40-->
        <Setter Property="Padding" Value="10" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                        <Border x:Name="Rect" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" IsHitTestVisible="False" />
                        <StackPanel Orientation="Horizontal"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Margin="{TemplateBinding Padding}">
                            <TextBlock Text="{TemplateBinding Content}"
                                       FontFamily="{StaticResource IconFont}"
                                       FontSize="{TemplateBinding FontSize}"
                                       VerticalAlignment="Center" />
                            <TextBlock Text="{TemplateBinding Tag}"
                                       Visibility="{Binding Tag,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource CvTextToVisible}}"
                                       FontSize="{TemplateBinding FontSize}"
                                       Margin="4,0,0,0"
                                       VerticalAlignment="Center" />
                        </StackPanel>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Rect.Background" Value="{StaticResource 暗遮罩}" />
                                        <Setter Target="Rect.BorderBrush" Value="{StaticResource 深暗遮罩}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="Rect.Background" Value="{StaticResource 深暗遮罩}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Opacity" Value="0.5" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--深色背景下的按钮-->
    <Style x:Key="浅色按钮" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="{StaticResource 中字号}"/>
        <Setter Property="BorderBrush" Value="{StaticResource 深亮遮罩}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                        <Border x:Name="Rect" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" IsHitTestVisible="False" />
                        <ContentPresenter x:Name="ContentPresenter"
                                          Content="{TemplateBinding Content}"
                                          ContentTransitions="{TemplateBinding ContentTransitions}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          AutomationProperties.AccessibilityView="Raw"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Rect.Background" Value="{StaticResource 亮遮罩}" />
                                        <Setter Target="Rect.BorderBrush" Value="{StaticResource 深亮遮罩}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="Rect.Background" Value="{StaticResource 深亮遮罩}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Opacity" Value="0.5" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Phone模式的搜索栏按钮-->
    <Style x:Key="PhonSearchButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource 默认背景}" />
        <Setter Property="Foreground" Value="{StaticResource 默认前景}"/>
        <Setter Property="FontSize" Value="{StaticResource 中字号}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                        <Rectangle x:Name="Rect" Stroke="{StaticResource 浅灰边框}" IsHitTestVisible="False" />
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock Text="&#xE013;"
                                       FontFamily="{StaticResource IconFont}"
                                       Foreground="{StaticResource 默认前景}"
                                       VerticalAlignment="Center" />
                            <ContentPresenter x:Name="ContentPresenter"
                                              Content="{TemplateBinding Content}"
                                              Margin="10" />
                        </StackPanel>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Rect.Fill" Value="{StaticResource 暗遮罩}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="Rect.Fill" Value="{StaticResource 深暗遮罩}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Opacity" Value="0.5" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--****************************** Frame ******************************-->
    <ios:Style x:Key="NativeDefaultFrame" TargetType="Frame">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Frame">
                    <NativeFramePresenter Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </ios:Style>

    <android:Style x:Key="NativeDefaultFrame" TargetType="Frame">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Frame">
                    <NativeFramePresenter Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </android:Style>

    <win:Style x:Key="NativeDefaultFrame" TargetType="Frame">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Frame">
                    <ContentPresenter Content="{TemplateBinding Content}"
									  ContentTemplate="{TemplateBinding ContentTemplate}"
									  ContentTransitions="{TemplateBinding ContentTransitions}"
									  Background="{TemplateBinding Background}"
									  BorderBrush="{TemplateBinding BorderBrush}"
									  BorderThickness="{TemplateBinding BorderThickness}"
									  Padding="{TemplateBinding Padding}"
									  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
									  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </win:Style>

    <wasm:Style x:Key="NativeDefaultFrame" TargetType="Frame">
    </wasm:Style>

    <!--默认Frame，不同平台不同style，含页面动画-->
    <Style TargetType="Frame" BasedOn="{StaticResource NativeDefaultFrame}" />

    <!--****************************** 数据模板 ******************************-->
</ResourceDictionary>